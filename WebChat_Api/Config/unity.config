<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection,Microsoft.Practices.Unity.Configuration"/>
  </configSections>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension,Microsoft.Practices.Unity.Interception.Configuration" />
    <typeAliases>
      <!-- Repository -->
      <typeAlias alias="IUserInfoRepository" type="Domain.ExpressModule.UserManage.IUserInfoRepository,Domain.ExpressModule"/>
      <typeAlias alias="UserInfoRepository" type="Infrastructure.Data.ExpressModule.Repositories.UserInfoRepository,Infrastructure.Data.ExpressModule"/>
      <typeAlias alias="IOrderInfoRepository" type="Domain.ExpressModule.OrderManage.IOrderInfoRepository,Domain.ExpressModule"/>
      <typeAlias alias="OrderInfoRepository" type="Infrastructure.Data.ExpressModule.Repositories.OrderInfoRepository,Infrastructure.Data.ExpressModule"/>
      <typeAlias alias="ICustomerInfoRepository" type="Domain.ExpressModule.CustomerManage.ICustomerInfoRepository,Domain.ExpressModule"/>
      <typeAlias alias="CustomerRepository" type="Infrastructure.Data.ExpressModule.Repositories.CustomerRepository,Infrastructure.Data.ExpressModule"/>
      <!-- Applicatoin Services -->
      <typeAlias alias="IUserManagementServices" type="Application.ExpressModule.UserManagement.IUserManagementServices,Application.ExpressModule"/>
      <typeAlias alias="UserManagementServices" type="Application.ExpressModule.UserManagement.UserManagementServices,Application.ExpressModule"/>
      <typeAlias alias="IOrderManagementServices" type="Application.ExpressModule.OrderManagement.IOrderManagementServices,Application.ExpressModule"/>
      <typeAlias alias="OrderManagementServices" type="Application.ExpressModule.OrderManagement.OrderManagementServices,Application.ExpressModule"/>
      <typeAlias alias="ICustomerManagementServices" type="Application.ExpressModule.CustomerManagement.ICustomerManagementServices,Application.ExpressModule"/>
      <typeAlias alias="CustomerManagementServices" type="Application.ExpressModule.CustomerManagement.CustomerManagementServices,Application.ExpressModule"/>
    </typeAliases>
    <container name="containerOne">
      <extension type="Interception"/>
      <types>
        <!-- UnitOfWork -->
        <type type="Infrastructure.Data.ExpressModule.UnitOfWork.IExpressModuleUnitOfWork,Infrastructure.Data.ExpressModule" mapTo="Infrastructure.Data.ExpressModule.UnitOfWork.ExpressManageEntities,Infrastructure.Data.ExpressModule">
          <lifetime type="transient" />
        </type>
        <!-- Log -->
        <type type="Infrastructure.CrossCutting.Logging.ITraceManager, Infrastructure.CrossCutting" mapTo="Infrastructure.CrossCutting.NetFramework.Logging.TraceManager,Infrastructure.CrossCutting.NetFramework">
          <interceptor isDefaultForType="true" type="InterfaceInterceptor"/>
          <interceptionBehavior type="PolicyInjectionBehavior" />
        </type>
        <!-- Repository -->
        <type type="IUserInfoRepository" mapTo="UserInfoRepository">
          <interceptor isDefaultForType="true" type="InterfaceInterceptor"/>
          <interceptionBehavior type="PolicyInjectionBehavior" />
        </type>
        <type type="IOrderInfoRepository" mapTo="OrderInfoRepository">
          <interceptor isDefaultForType="true" type="InterfaceInterceptor"/>
          <interceptionBehavior type="PolicyInjectionBehavior" />
        </type>
        <type type="ICustomerInfoRepository" mapTo="CustomerRepository">
          <interceptor isDefaultForType="true" type="InterfaceInterceptor"/>
          <interceptionBehavior type="PolicyInjectionBehavior" />
        </type>
        <!-- Application Services -->
        <type type="IUserManagementServices" mapTo="UserManagementServices">
          <interceptor isDefaultForType="true" type="InterfaceInterceptor"/>
          <interceptionBehavior type="PolicyInjectionBehavior" />
        </type>
        <type type="IOrderManagementServices" mapTo="OrderManagementServices">
          <interceptor isDefaultForType="true" type="InterfaceInterceptor"/>
          <interceptionBehavior type="PolicyInjectionBehavior" />
        </type>
        <type type="ICustomerManagementServices" mapTo="CustomerManagementServices">
          <interceptor isDefaultForType="true" type="InterfaceInterceptor"/>
          <interceptionBehavior type="PolicyInjectionBehavior" />
        </type>
      </types>
    </container>
  </unity>
</configuration>